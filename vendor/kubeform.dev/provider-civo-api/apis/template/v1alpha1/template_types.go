/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Template struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TemplateSpec   `json:"spec,omitempty"`
	Status            TemplateStatus `json:"status,omitempty"`
}

type TemplateSpec struct {
	State *TemplateSpecResource `json:"state,omitempty" tf:"-"`

	Resource TemplateSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type TemplateSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance, $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically optional, but you won't really be able to use instances without it -see our learn guide on templates for more information)
	// +optional
	CloudConfig *string `json:"cloudConfig,omitempty" tf:"cloud_config"`
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code *string `json:"code" tf:"code"`
	// The default username to suggest that the user creates (optional: defaults to civo).
	// +optional
	DefaultUsername *string `json:"defaultUsername,omitempty" tf:"default_username"`
	// A multi-line description of the template, in Markdown format (optional).
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but must be specified if no volume_id is specified).
	// +optional
	ImageID *string `json:"imageID,omitempty" tf:"image_id"`
	// This is a short human readable name for the template (optional).
	Name *string `json:"name" tf:"name"`
	// A one line description of the template (optional)
	// +optional
	ShortDescription *string `json:"shortDescription,omitempty" tf:"short_description"`
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is specified).
	// +optional
	VolumeID *string `json:"volumeID,omitempty" tf:"volume_id"`
}

type TemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TemplateList is a list of Templates
type TemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Template CRD objects
	Items []Template `json:"items,omitempty"`
}
